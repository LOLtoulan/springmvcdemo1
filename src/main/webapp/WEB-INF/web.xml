<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
<display-name>Archetype Created Web Application</display-name>



    <!--创建核心控制器，所有的请求都会经过改类然后通过该servlet，通过该servlet对请求进行分发-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--将配置文件springmvc.xml加载到项目中-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--看最下面-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--拦截所有请求-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
    <!-- 我们知道servlet正常来讲只有在第一次请求的时候才会创建，而load-on-startup是指web应用程序启动时加载时机

    （1）load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。

    （2）它的值必须是一个整数，表示servlet应该被载入的顺序。

    （3）当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet。

    （4）当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。

    （5）正数的值越小，该servlet的优先级越高，应用启动时就越先加载。

    （6）当值相同时，容器就会自己选择顺序来加载。
    -->